#!/bin/python3

import client_lib


def test_for_bad_values(request, response, response_str):
    if b"/bin/bash" in response:
        print_exploitable_and_exit4(request, response_str, "got shell of signer")
    
    if b"/root/" in response or b"/home/" in response:
        print_exploitable_and_exit4(request, response_str, "got home directory of signer")
    
    if b"root" in response or b"homer" in response or b"users" in response:
        print_exploitable_and_exit4(request, response_str, "Attacker got a user name")
    
    if b"PRIVATE KEY" in response:
        print_exploitable_and_exit4(request, response_str, "got private key from signer")


def get_environment_variable_from_signer(request):
    response = None
    try:
        soc = client_lib.new_connected_socket(5421)
        client_lib.send_input_to_server(soc, request)
        response = client_lib.receive_bytes_from_socket(soc)
        response_str = response.decode(encoding="utf-8", errors="ignore")
        test_for_bad_values(request, response, response_str)
    except RuntimeError as re:
        print("Exploit test failed")
        if response:
            print(f"But got following response: {response}")
        print(re)
        exit(1)
    return


def print_exploitable_and_exit4(request, response, additional_msg=None):
    print("Exploitable: Got an environment variable from the signer:")
    print(f"Request send to server: {request}")
    print(f"Response from Server: {response}")
    print(additional_msg)
    exit(4)


if __name__ == "__main__":
    get_environment_variable_from_signer("-Key SHELL")
    get_environment_variable_from_signer("-Key HOME")
    get_environment_variable_from_signer("-Key USER")

    print("OK: Could not get Any environment variables")
    exit(1)
